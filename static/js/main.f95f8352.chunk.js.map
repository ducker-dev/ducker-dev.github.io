{"version":3,"sources":["App/Static/Images/my-photo.png","App/Static/Images/telegram-icon.svg","App/Static/Images/instagram-icon.svg","App/Static/Images/vk-icon.svg","App/Components/Header/index.js","Redux/actions.js","App/Components/Footer/index.js","App/Components/ux.js","App/index.js","serviceWorker.js","Redux/reducers.js","index.js"],"names":["module","exports","Header","this","props","theme","language","dictionary","changeLanguage","changeTheme","className","src","MyPhoto","alt","header","tongue","classNames","onClick","localStorage","setItem","type","checked","onChange","mainTitle","href","target","rel","TelegramIcon","InstagramIcon","VkIcon","location","locationText","phoneNumber","mail","React","Component","mapDispatchToProps","payload","enLanguage","ruLanguage","footer","components","connect","store","Footer","App","Boolean","window","hostname","match","initialState","getItem","changeState","state","action","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f95f8352.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/my-photo.5004fb41.png\";","module.exports = __webpack_public_path__ + \"static/media/telegram-icon.5a49ab2e.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram-icon.4c0c46c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/vk-icon.5be43f48.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\n\nimport { connect } from \"react-redux\";\nimport { changeTheme, changeLanguage } from \"../../../Redux/actions\";\n\nimport MyPhoto from \"./../../Static/Images/my-photo.png\";\nimport TelegramIcon from \"./../../Static/Images/telegram-icon.svg\";\nimport InstagramIcon from \"./../../Static/Images/instagram-icon.svg\";\nimport VkIcon from \"./../../Static/Images/vk-icon.svg\";\nimport \"./style.scss\";\n\nclass Header extends React.Component {\n  render() {\n    const {\n      theme,\n      language,\n      dictionary,\n      changeLanguage,\n      changeTheme\n    } = this.props;\n\n    return (\n      <header className={`header theme_${theme}`}>\n        <div className=\"header__left-side\">\n          <div className=\"container-mini\">\n            <img\n              className=\"header__logo\"\n              src={MyPhoto}\n              alt=\"Фото Ивана Смирнова\"\n            />\n          </div>\n        </div>\n        <div className=\"header__right-side\">\n          <div className=\"container\">\n            <div className=\"header__functions\">\n              <div className=\"switch-language\">\n                <div className=\"switch-language__subscription\">\n                  {dictionary.header.tongue}\n                </div>\n                <button\n                  className={classNames(\"switch-language__button\", {\n                    \"switch-language__button_active\": language === \"ru\"\n                  })}\n                  onClick={() => {\n                    localStorage.setItem(\"language\", \"ru\");\n                    changeLanguage(\"ru\");\n                  }}\n                >\n                  Русский\n                </button>\n                <div className=\"switch-language__slash\">/</div>\n                <button\n                  className={classNames(\"switch-language__button\", {\n                    \"switch-language__button_active\": language === \"en\"\n                  })}\n                  onClick={() => {\n                    localStorage.setItem(\"language\", \"en\");\n                    changeLanguage(\"en\");\n                  }}\n                >\n                  English\n                </button>\n              </div>\n              <label className=\"switch-topic\">\n                <input\n                  className=\"switch-topic__input\"\n                  type=\"checkbox\"\n                  checked={theme === \"dark\"}\n                  onChange={() => {\n                    if (theme === \"light\") {\n                      localStorage.setItem(\"theme\", \"dark\");\n                      changeTheme(\"dark\");\n                    } else {\n                      localStorage.setItem(\"theme\", \"light\");\n                      changeTheme(\"light\");\n                    }\n                  }}\n                />\n                <div className=\"switch-topic__slider\" />\n              </label>\n            </div>\n            <h1 className=\"header__title\">{dictionary.header.mainTitle}</h1>\n            <div className=\"header__more-info\">\n              <div className=\"header__desired-position\">\n                Middle front-end developer\n              </div>\n              <div className=\"header__social-links\">\n                <a\n                  href=\"https://teleg.run/ducker_t\"\n                  className=\"header__social-link\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img\n                    className=\"header__telegram-icon\"\n                    src={TelegramIcon}\n                    alt=\"Иконка Telegram\"\n                  />\n                </a>\n                <a\n                  href=\"https://instagram.com/ducker_life\"\n                  className=\"header__social-link\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img\n                    className=\"header__instagram-icon\"\n                    src={InstagramIcon}\n                    alt=\"Иконка Instagram\"\n                  />\n                </a>\n                <a\n                  href=\"https://vk.com/ducker_vk\"\n                  className=\"header__social-link\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  <img\n                    className=\"header__vk-icon\"\n                    src={VkIcon}\n                    alt=\"Иконка Vk\"\n                  />\n                </a>\n              </div>\n            </div>\n            <hr className=\"header__hr\" />\n            <div className=\"header__contacts\">\n              <div className=\"header__contact\">\n                <div className=\"header__contact-title\">\n                  {dictionary.header.location}\n                </div>\n                <span className=\"header__contact-content header__contact-address\">\n                  {dictionary.header.locationText}\n                </span>\n              </div>\n              <div className=\"header__contact\">\n                <div className=\"header__contact-title\">\n                  {dictionary.header.phoneNumber}\n                </div>\n                <a\n                  className=\"header__contact-content\"\n                  href=\"tel:+79377918200\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  +7 (937)-791-82-00\n                </a>\n              </div>\n              <div className=\"header__contact\">\n                <div className=\"header__contact-title\">GitHub</div>\n                <a\n                  className=\"header__contact-content\"\n                  href=\"https://github.com/ducker-dev\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  github.com/ducker-dev\n                </a>\n              </div>\n              <div className=\"header__contact\">\n                <div className=\"header__contact-title\">{dictionary.header.mail}</div>\n                <a\n                  className=\"header__contact-content\"\n                  href=\"mailto:the.ivan.smirnov@gmail.com\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  the.ivan.smirnov@gmail.com\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  theme: store.theme,\n  language: store.language,\n  dictionary: store.dictionary\n});\n\nconst mapDispatchToProps = {\n  changeTheme,\n  changeLanguage\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import enLanguage from './../Dictionaries/en.json';\nimport ruLanguage from './../Dictionaries/ru.json';\n\nexport const changeTheme = theme => ({\n  type: \"CHANGE_THEME\",\n  payload: theme\n});\n\nexport const changeLanguage = language => {\n  const activeDictionary = language === \"en\" ? enLanguage : ruLanguage;\n  return {\n    type: \"CHANGE_LANGUAGE\",\n    payload: {\n      language: language,\n      dictionary: activeDictionary\n    }\n  }\n};\n","import React from 'react';\n\nfunction footer(props) {\nreturn <footer>\n  \n</footer>;\n}\n\nexport default footer;\n","import Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nconst components = {\n  Header,\n  Footer\n};\n\nexport default components;","import React, { Component } from \"react\";\nimport \"./Components/common.scss\";\nimport ux from \"./Components/ux\";\n\nconst { Header, Footer } = ux;\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Header />\n        Содержимое\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import enLanguage from './../Dictionaries/en.json';\nimport ruLanguage from './../Dictionaries/ru.json';\n\nconst initialState = {\n  theme: localStorage.getItem(\"theme\") === \"dark\" ? \"dark\" : \"light\",\n  language: localStorage.getItem(\"language\") === \"ru\" ? \"ru\" : \"en\",\n  dictionary: localStorage.getItem(\"language\") === \"ru\" ? ruLanguage : enLanguage\n};\n\nconst changeState = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHANGE_THEME\":\n      return {\n        ...state,\n        theme: action.payload\n      };\n    case \"CHANGE_LANGUAGE\":\n      return {\n        ...state,\n        language: action.payload.language,\n        dictionary: action.payload.dictionary,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default changeState;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App/index\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport changeState from \"./Redux/reducers\";\n\nconst store = createStore(changeState);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}