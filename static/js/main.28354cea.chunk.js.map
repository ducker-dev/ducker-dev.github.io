{"version":3,"sources":["App/Components/PageHeader/index.js","App/Components/fetchs.js","App/Components/Post/index.js","App/Components/CreatePost/index.js","App/Pages/Posts/index.js","Redux/actions.js","App/Components/Comments/index.js","App/Pages/ViewPost/index.js","App/index.js","Redux/reducers.js","index.js"],"names":["PageHeader","className","to","basePath","dataInteraction","method","body","url","a","options","headers","JSON","stringify","fetch","response","json","text","Post","props","changePost","e","preventDefault","postTitle","textInputOne","current","value","postBody","textInputTwo","id","modifiedPost","parse","title","oldPosts","posts","getPosts","map","item","setState","change","showOption","removeListeners","alert","newPosts","filter","post","console","error","deletePost","document","removeEventListener","handleClickOutside","handleKeyUp","addListeners","addEventListener","postRef","contains","target","keyCode","React","createRef","state","prevProps","prevState","snapshot","this","ref","onSubmit","required","defaultValue","onClick","classNames","width","height","viewBox","xmlns","d","fill","Component","CreatePost","getNewPost","newPost","openEditing","createPostRef","placeholder","Posts","length","key","mapDispatchToProps","type","payload","connect","store","Comments","handleSubmit","textInput","result","getPost","log","comments","comment","ViewPost","match","params","then","res","App","exact","path","component","initialState","changeState","action","createStore","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.28354cea.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nimport \"./style.scss\";\n\nfunction PageHeader() {\n  return (\n    <header className=\"header\">\n      <div className=\"container header__content\">\n        <nav>\n          <ul>\n            <li><Link to=\"/\">Перейти ко всем постам</Link></li>\n          </ul>\n        </nav>\n      </div>\n    </header>\n  );\n}\n\nexport default PageHeader;\n","const basePath = \"https://simpleblogapi.herokuapp.com\";\n// /**\n//  * @function dataInteraction\n//  *\n//  * @description qwe\n//  * @param method\n//  * @param body\n//  * @param url\n//  * @param resultFunc\n//  * @param errorFunc\n//  *\n//  * @return\n//  */\nexport async function dataInteraction(method, body, url) {\n  const options = {\n    method: method,\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    },\n    body: body ? JSON.stringify(body) : null\n  };\n  try {\n    const response = await fetch(`${basePath}/${url}`, options);\n    return method === \"GET\"\n      ? await response.json()\n      : await response.text()\n  } catch (e) {\n    throw e\n  }\n}\n\nasync function f(method, body, url) {\n  let xhr = new XMLHttpRequest();\n  xhr.setRequestHeader('Content-Type', 'application/json');\n  xhr.open(method, `${basePath}/${url}`, true);\n  body ? xhr.send(JSON.stringify(body)) : xhr.send();\n\n  xhr.onreadystatechange = function() {\n    if (xhr.readyState != 4) return;\n\n    if (xhr.status != 200) {\n      alert(xhr.status + ': ' + xhr.statusText);\n    } else {\n      alert(xhr.responseText);\n    }\n\n  }\n}\n\n","import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport classNames from \"classnames\";\n\nimport \"./style.scss\";\nimport {dataInteraction} from \"../fetchs\";\n\nclass Post extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.textInputOne = React.createRef();\n    this.textInputTwo = React.createRef();\n    this.postRef = React.createRef();\n    this.state = {\n      change: false,\n      showOption: false\n    }\n  }\n\n  changePost = async (e) => {\n    e.preventDefault();\n\n    let postTitle = this.textInputOne.current.value;\n    let postBody = this.textInputTwo.current.value;\n\n    try {\n      const modifiedPost = await dataInteraction(\n        \"PUT\",\n        { \"title\": postTitle, \"body\": postBody },\n        `posts/${this.props.id}`\n      );\n      const {title, body, id} = JSON.parse(modifiedPost);\n      let oldPosts = [...this.props.posts];\n\n      if (id) {\n        this.props.getPosts(oldPosts.map(item => {\n          if(+item.id === +id)\n            return {...item, title, body};\n          else\n            return {...item};\n        }));\n        this.setState({change: false, showOption: false});\n        this.removeListeners();\n      } else {\n        alert('Пост, который вы пытались изменить, был удален другим пользователем');\n        const newPosts = oldPosts.filter(post => post.id !== this.props.id);\n        this.props.getPosts(newPosts)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  };\n\n  deletePost = async () => {\n    try {\n      await dataInteraction(\n        \"DELETE\",\n        null,\n        `posts/${this.props.id}`\n      );\n      let oldPosts = [...this.props.posts];\n      this.props.getPosts(oldPosts.filter(post => post.id !== this.props.id));\n    } catch (e) {\n      console.error(e)\n    }\n  };\n\n  removeListeners = () => {\n    document.removeEventListener(\"click\", this.handleClickOutside);\n    document.removeEventListener(\"keydown\", this.handleKeyUp);\n  };\n\n  addListeners = () => {\n    document.addEventListener(\"click\", this.handleClickOutside);\n    document.addEventListener(\"keydown\", this.handleKeyUp);\n  };\n\n  handleClickOutside = e => {\n    if (!this.postRef.current.contains(e.target)) {\n      this.setState({change: false, showOption: false});\n      this.removeListeners();\n    }\n  };\n\n  handleKeyUp = e => {\n    if (e.keyCode === 27) {\n      this.setState({change: false, showOption: false});\n      this.removeListeners();\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.showOption && !prevState.showOption) {\n      this.addListeners();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  render() {\n    const {id, title, body} = this.props;\n\n    return (\n      <div className=\"post\" ref={this.postRef}>\n        {\n          this.state.change\n            ? <div className=\"post__wrapper-form\">\n              <form className=\"post__change-form\"\n                    onSubmit={this.changePost}>\n                <input className=\"post__input\"\n                       required\n                       defaultValue={title}\n                       ref={this.textInputOne}/>\n                <input className=\"post__input\"\n                       required\n                       defaultValue={body}\n                       ref={this.textInputTwo}/>\n                <button className=\"post__button\">\n                  Изменить пост\n                </button>\n              </form>\n            </div>\n            : <Link to={\"/view-post/\" + id} className=\"post__link\">\n              <div className=\"post__title\">\n                {title || 'Вы не передали заголовок поста'}\n              </div>\n              <div className=\"post__body\">\n                {body || 'Вы не передали тело поста'}\n              </div>\n            </Link>\n        }\n        {\n          !this.state.showOption && (\n            <button className=\"post__show-option\"\n                    onClick={() => this.setState({showOption: true})}>\n              ...\n            </button>\n          )\n        }\n        {\n          this.state.showOption && <>\n            <button className={classNames(\n              \"post__del-post\",\n              {\"post__del-post_visible\": this.state.change}\n            )}\n                    onClick={() => this.deletePost()}\n            >\n              <svg width=\"12\" height=\"15\" viewBox=\"0 0 12 15\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M1.31213 14.2766C1.32906 14.6809 1.66176 15 2.06635 15H9.11356C9.51815 15 9.85085 14.6809 9.86778 14.2766L10.371 3.65259H0.808868L1.31213 14.2766ZM7.18412 6.29141C7.18412 6.12213 7.32138 5.98483 7.49074 5.98483H7.98115C8.1504 5.98483 8.28777 6.12209 8.28777 6.29141V12.3612C8.28777 12.5305 8.15051 12.6678 7.98115 12.6678H7.49074C7.32145 12.6678 7.18412 12.5306 7.18412 12.3612V6.29141ZM5.03816 6.29141C5.03816 6.12213 5.17543 5.98483 5.34475 5.98483H5.83516C6.00441 5.98483 6.14175 6.12209 6.14175 6.29141V12.3612C6.14175 12.5305 6.00452 12.6678 5.83516 12.6678H5.34475C5.17546 12.6678 5.03816 12.5306 5.03816 12.3612V6.29141ZM2.89214 6.29141C2.89214 6.12213 3.0294 5.98483 3.19872 5.98483H3.68917C3.85846 5.98483 3.99576 6.12209 3.99576 6.29141V12.3612C3.99576 12.5305 3.85849 12.6678 3.68917 12.6678H3.19872C3.02944 12.6678 2.89214 12.5306 2.89214 12.3612V6.29141Z\"/>\n                <path\n                  d=\"M10.7061 0.772725H7.455V0.158085C7.455 0.0707985 7.38424 0 7.29691 0H3.8829C3.79562 0 3.72485 0.0707985 3.72485 0.158085V0.772688H0.473704C0.212065 0.772688 0 0.98479 0 1.24643V2.73463H11.1798V1.24647C11.1798 0.984827 10.9677 0.772725 10.7061 0.772725Z\"/>\n              </svg>\n            </button>\n            <button className={classNames(\n              \"post__change-post\",\n              {\"post__change-post_visible\": this.state.change}\n            )}\n                    onClick={() => this.setState({change: !this.state.change})}\n            >\n              <svg width=\"12\" height=\"12\" viewBox=\"0 0 12 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path\n                  d=\"M3.93517 9.78157L1.39876 7.24575L7.5335 1.11245L10.0699 3.64826L3.93517 9.78157ZM1.16168 7.69244L3.48838 10.0186L0 11.18L1.16168 7.69244ZM10.85 2.87166L10.4101 3.3115L7.87034 0.772334L8.31028 0.332496C8.75344 -0.110832 9.47209 -0.110832 9.91525 0.332496L10.85 1.26707C11.29 1.7116 11.29 2.42726 10.85 2.87166Z\"\n                  fill=\"black\"/>\n              </svg>\n            </button>\n          </>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Post;\n","import React, {Component} from 'react';\nimport \"./style.scss\";\nimport {dataInteraction} from \"../fetchs\";\n\nclass CreatePost extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.textInputOne = React.createRef();\n    this.textInputTwo = React.createRef();\n    this.createPostRef = React.createRef();\n    this.state = {\n      openEditing: false\n    }\n  }\n\n  getNewPost = async (e) => {\n    e.preventDefault();\n\n    let postTitle = this.textInputOne.current.value;\n    let postBody = this.textInputTwo.current.value;\n\n    try {\n      const newPost = await dataInteraction(\n        \"POST\",\n        {\"title\": postTitle, \"body\": postBody},\n        \"posts\"\n      );\n      this.props.getPosts([...this.props.posts, JSON.parse(newPost)]);\n      this.setState({openEditing: false});\n    } catch (e) {\n      console.error(e)\n    }\n\n  };\n\n  removeListeners = () => {\n    document.removeEventListener(\"click\", this.handleClickOutside);\n    document.removeEventListener(\"keydown\", this.handleKeyUp);\n  };\n\n  addListeners = () => {\n    document.addEventListener(\"click\", this.handleClickOutside);\n    document.addEventListener(\"keydown\", this.handleKeyUp);\n  };\n\n  handleClickOutside = e => {\n    if (!this.createPostRef.current.contains(e.target)) {\n      this.setState({openEditing: false});\n      this.removeListeners();\n    }\n  };\n\n  handleKeyUp = e => {\n    if (e.keyCode === 27) {\n      this.setState({openEditing: false});\n      this.removeListeners();\n    }\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.state.openEditing && !prevState.openEditing) {\n      this.addListeners();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  render() {\n    const {openEditing} = this.state;\n    return (\n      <div className=\"create-post\"\n           ref={this.createPostRef}\n           onClick={() => this.setState({openEditing: true})}>\n        {\n          openEditing\n            ? <form className=\"create-post__form\"\n                    onSubmit={this.getNewPost}>\n              <input className=\"create-post__input\"\n                     required\n                     placeholder=\"Заголовок поста\"\n                     ref={this.textInputOne}/>\n              <input className=\"create-post__input\"\n                     required\n                     placeholder=\"Тело поста\"\n                     ref={this.textInputTwo}/>\n              <button className=\"create-post__button\">\n                Добавить пост\n              </button>\n            </form>\n            : <div className=\"create-post__plus\">\n              Создать новый пост\n            </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default CreatePost;\n","import React, {Component} from 'react';\n\nimport \"./style.scss\";\nimport PageHeader from \"../../Components/PageHeader\";\nimport Post from \"../../Components/Post\";\nimport CreatePost from \"../../Components/CreatePost\";\n\nimport {connect} from \"react-redux\";\nimport {getPosts} from \"../../../Redux/actions\";\nimport {dataInteraction} from \"../../Components/fetchs\"\n\nclass Posts extends Component {\n\n  /**\n   * @method getDataPosts\n   * @return {void}\n   */\n  getPosts = async () => {\n    try {\n      const posts = await dataInteraction(\n        \"GET\",\n        null,\n        \"posts\"\n      );\n      this.props.getPosts(posts);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  componentDidMount() {\n    this.getPosts();\n  }\n\n  render() {\n    const {posts, getPosts} = this.props;\n    return (\n      <>\n        <PageHeader/>\n        <div className=\"posts\">\n          <div className=\"container\">\n            <h1>Posts</h1>\n            <div className=\"posts__content\">\n              {\n                posts && posts.length > 0\n                  ? posts.map(post => (\n                    <Post key={post.id} {...post}\n                          posts={posts}\n                          getPosts={getPosts}/>\n                  ))\n                  : <div>Загрузка...</div>\n              }\n              <CreatePost getPosts={getPosts} posts={posts}/>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  posts: store.posts,\n});\n\nconst mapDispatchToProps = {\n  getPosts\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n","export const getPosts = posts => ({\n  type: \"GET_POSTS\",\n  payload: posts\n});\n\nexport const getPost = post => ({\n  type: \"GET_POST\",\n  payload: post\n});","import React, {Component} from 'react';\nimport \"./style.scss\";\nimport {dataInteraction} from \"../fetchs\";\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.textInput = React.createRef();\n    this.state = {\n      value: ''\n    }\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    dataInteraction(\n      \"POST\",\n      {\n        \"postId\": this.props.id,\n        \"body\": this.textInput.current.value\n      },\n      \"comments\",\n      () => {\n        dataInteraction(\n          \"GET\",\n          null,\n          `posts/${this.props.id}?_embed=comments`,\n          (result) => {\n            this.props.getPost(result);\n            this.textInput.current.value = '';\n          },\n          (error) => console.log(error)\n        );\n      },\n    );\n  };\n\n  render() {\n    const {comments} = this.props;\n\n    return (\n      <div className=\"comments\">\n        {\n          comments && comments.length > 0\n            ? comments.map(comment => (\n              <div key={comment.id} className=\"comments__comment\">{comment.body}</div>\n            ))\n            : <div className=\"comments__temporary-text\">{\n              comments\n                ? \"Данный пост еще никто не комментрировал\"\n                : \"Загрузка комментариев\"\n            }</div>\n        }\n        <form className=\"comments__form\" onSubmit={this.handleSubmit}>\n          <input className=\"comments__input\"\n                 required\n                 type=\"text\"\n                 placeholder=\"Введите текст комментария\"\n                 ref={this.textInput}/>\n          <button className=\"comments__button\">Отправить</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Comments;\n","import React, {Component} from 'react';\nimport PageHeader from \"../../Components/PageHeader\";\nimport \"./style.scss\";\n\nimport {connect} from \"react-redux\";\nimport {getPost} from \"../../../Redux/actions\"\nimport Comments from \"../../Components/Comments\";\n\nclass ViewPost extends Component {\n  componentDidMount() {\n    const id = this.props.match.params.id || \"\";\n\n    fetch(`https://simpleblogapi.herokuapp.com/posts/${id}?_embed=comments`)\n      .then(res => {\n        return res.json();\n      })\n      .then(result => this.props.getPost(result));\n  }\n\n  componentWillUnmount() {\n    this.props.getPost({})\n  }\n\n  render() {\n    const {post, getPost} = this.props;\n    return (\n      <>\n        <PageHeader/>\n        <div className=\"view-post\">\n          <div className=\"container\">\n            <h1>View post</h1>\n            {\n              !post.title && !post.body\n                ? <div>Загрузка информации о посте...</div>\n                : <div className=\"view-post__content\">\n                  <div className=\"view-post__title\">{post.title}</div>\n                  <div>{post.body}</div>\n                </div>\n            }\n            <h1>Comments</h1>\n            <Comments {...post} getPost={getPost}/>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  post: store.post,\n});\n\nconst mapDispatchToProps = {\n  getPost\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewPost);\n","import React from 'react';\nimport './style.scss';\nimport {Switch, Route} from \"react-router-dom\";\n\nimport Posts from \"./Pages/Posts\"\nimport ViewPost from \"./Pages/ViewPost\"\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Posts} />\n      <Route path=\"/view-post/:id\" component={ViewPost} />\n    </Switch>\n\n  );\n}\n\nexport default App;\n","const initialState = {\n  posts: [],\n  post: {}\n};\n\nconst changeState = (state = initialState, action) => {\n  switch (action.type) {\n    case \"GET_POSTS\":\n      return {\n        ...state,\n        posts: action.payload\n      };\n    case \"GET_POST\":\n      return {\n        ...state,\n        post: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\nexport default changeState;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport {Provider} from \"react-redux\";\nimport {createStore} from \"redux\";\nimport changeState from \"./Redux/reducers\";\n\nconst store = createStore(changeState);\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// import * as serviceWorker from './serviceWorker';\n// serviceWorker.unregister();\n"],"sourceRoot":""}